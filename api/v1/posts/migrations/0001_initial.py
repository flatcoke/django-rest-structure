# Generated by Django 2.1.2 on 2018-11-28 11:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import sys


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.TextField(verbose_name='content')),
                ('post_id', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True,
                                                    verbose_name='created')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('comment', models.ForeignKey(blank=True, null=True,
                                              on_delete=django.db.models
                                              .deletion.CASCADE,
                                              related_name='comments',
                                              to='posts.Comment')),
                ('post_type',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                   to='contenttypes.ContentType')),
                ('user',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                   related_name='comments',
                                   to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'comment',
                'verbose_name_plural': 'comments',
                'db_table': 'comments',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Flatgram',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title',
                 models.CharField(max_length=50, verbose_name='title')),
                ('content',
                 models.TextField(null=True, verbose_name='content')),
                ('created_at', models.DateTimeField(auto_now_add=True,
                                                    verbose_name='created')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                   related_name='flatgrams',
                                   to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'flatgram',
                'verbose_name_plural': 'flatgrams',
                'db_table': 'flatgrams',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Flog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                (
                    'title',
                    models.CharField(max_length=50, verbose_name='title')),
                (
                    'content',
                    models.TextField(null=True, verbose_name='content')),
                ('created_at', models.DateTimeField(auto_now_add=True,
                                                    verbose_name='created')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                   related_name='flogs',
                                   to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'flog',
                'verbose_name_plural': 'flogs',
                'db_table': 'flogs',
                'ordering': ['-id'],
            },
        ),
        migrations.AddIndex(
            model_name='flog',
            index=models.Index(fields=['created_at'],
                               name='idx_flogs_created_at'),
        ),
        migrations.AddIndex(
            model_name='flatgram',
            index=models.Index(fields=['created_at'],
                               name='idx_flatgrams_created_at'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['created_at'],
                               name='idx_comments_created_at'),
        ),
    ]
    if 'test' not in sys.argv and 'test_coverage' not in sys.argv:
        operations += [
            migrations.RunSQL([
                ("alter table comments modify "
                 "column user_id int after id"),
                ("alter table comments modify "
                 "column post_type_id int after user_id"),
                ("alter table comments modify "
                 "column post_id int after post_type_id"),
                ("alter table comments modify "
                 "column comment_id int after post_id"),
            ], ''  # this is not effect to other sql
            ),
            migrations.RunSQL([
                ("alter table flogs modify "
                 "column user_id int after id"),
                ("alter table flatgrams modify "
                 "column user_id int after id"),
            ], ''  # this is not effect to other sql
            ),
        ]
